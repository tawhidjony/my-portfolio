{"version":3,"sources":["assets/tawhid2.png","components/Menu.jsx","pages/Home.jsx","pages/Resume.jsx","pages/About.jsx","components/CardComponent.jsx","pages/Project.jsx","pages/Contact.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","boxShadow","background","menuButton","marginRight","spacing","title","color","list","width","fullList","Menu","side","classes","React","useState","left","state","setState","toggleDrawer","open","event","type","key","className","AppBar","position","Toolbar","IconButton","edge","aria-label","onClick","Typography","variant","to","Button","Drawer","onClose","role","onKeyDown","List","map","text","index","ListItem","button","ListItemText","primary","Home","src","Tawhid","alt","Resume","About","maxWidth","media","height","CardComponent","Title","Heading","Image","Card","card","CardMedia","image","CardContent","cardContent","gutterBottom","component","CardActions","size","TabPanel","props","children","value","other","hidden","id","aria-labelledby","Box","p","a11yProps","backgroundColor","palette","paper","cards","ScrollableTabsButtonForce","setValue","Grid","justify","container","Tabs","onChange","newValue","scrollButtons","indicatorColor","textColor","Tab","label","icon","Container","cardGrid","item","xs","sm","md","Contact","App","exact","path","Project","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ff2ee790.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tawhid2.0d74c389.png\";","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { AiOutlineMenu } from \"react-icons/ai\";\r\n/*  */\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport '../App.css'\r\n\r\n/*  */\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      boxShadow: \"none\",\r\n      background: 'linear-gradient(to left,  #1fa2ff, #12d8fa, #a6ffcb)',\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      color:'red'\r\n    },\r\n\r\n    list: {\r\n        width: 250,\r\n      },\r\n      fullList: {\r\n        width: 'auto',\r\n      },\r\n\r\n  }));\r\n  \r\nconst Menu = () => {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useState({\r\n      left: false\r\n    });\r\n  \r\n    const toggleDrawer = (side, open) => event => {\r\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n        return;\r\n      }\r\n  \r\n      setState({ ...state, [side]: open });\r\n    };\r\n    const sideList = side => (\r\n        <div\r\n          className={classes.list}\r\n          role=\"presentation\"\r\n          onClick={toggleDrawer(side, false)}\r\n          onKeyDown={toggleDrawer(side, false)}\r\n        >\r\n          <List>\r\n            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" className={classes.root}>\r\n              <Toolbar>\r\n                  <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer('left', true)}>\r\n                      <AiOutlineMenu \r\n                          color=\"red\"\r\n                      />\r\n                  </IconButton>\r\n                  <Typography variant=\"h6\" className={classes.title}>\r\n                    <Link to=\"/\"> My Portfolio</Link>\r\n                  </Typography>\r\n                    <Link to=\"/resume\" ><Button color=\"default\">Resume</Button></Link>\r\n                    <Link to=\"/about\" ><Button color=\"default\">About us</Button></Link>\r\n                    <Link to=\"/project\" ><Button color=\"default\">Project</Button></Link>\r\n                    <Link to=\"/contact\" ><Button color=\"default\">Contact</Button></Link>\r\n              </Toolbar>\r\n            </AppBar>\r\n\r\n            <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\r\n                {sideList('left')}\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\nimport Menu from '../components/Menu';\r\n\r\n/* image */\r\nimport Tawhid from '../assets/tawhid2.png'\r\n/* CSS */\r\nimport '../App.css';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"home-area\">\r\n            <Menu />\r\n            <img src={Tawhid} alt=\"image not found!\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react'\r\nimport Menu from '../components/Menu';\r\nconst Resume = () => {\r\n    return (\r\n        <div>\r\n             <Menu />\r\n            <h1>Resume </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Resume\r\n","import React from 'react'\r\nimport Menu from '../components/Menu';\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n             <Menu />\r\n            <h1>About page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n/* Icons */\r\nimport {FaGithub} from 'react-icons/fa'\r\nimport {MdLiveTv} from 'react-icons/md'\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 400,\r\n  },\r\n  media: {\r\n    width:'100%',\r\n    height: 200,\r\n  },\r\n});\r\n\r\nconst CardComponent = ({Title, Heading, Image}) => {\r\n\r\n  const classes = useStyles();\r\n  return (\r\n        <Card className={classes.card}>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image=\"https://i1.wp.com/www.iamabiker.com/wp-content/uploads/2017/01/Ducati-Scrambler-HD-wallpapers-7.jpg\"\r\n            title=\"Paella dish\"\r\n          />\r\n          <CardContent className={classes.cardContent}>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                {Heading}\r\n              </Typography>\r\n              <Typography>\r\n                {Title}\r\n              </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n              <Button size=\"small\" color=\"primary\">\r\n                  <FaGithub size={25} /> Github\r\n              </Button>\r\n              <Button size=\"small\" color=\"primary\">\r\n                <MdLiveTv size={25}/> Live Demo\r\n              </Button>\r\n          </CardActions>\r\n        </Card>\r\n  );\r\n}\r\nexport default CardComponent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\n/* Components */\r\nimport Menu from '../components/Menu'\r\nimport Container from '@material-ui/core/Container';\r\nimport CardComponent from '../components/CardComponent';\r\n/* CSS */\r\nimport '../App.css'\r\n/* Icons */\r\nimport {FaHtml5, FaLaravel, FaNodeJs} from 'react-icons/fa';\r\nimport {DiBootstrap} from 'react-icons/di';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\nexport default function ScrollableTabsButtonForce() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Menu/>\r\n      <AppBar position=\"static\" color=\"default\" >\r\n        <Toolbar>\r\n        <Grid justify={\"space-between\"} container>\r\n            <Grid container justify={\"center\"}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"on\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          aria-label=\"scrollable force tabs example\"\r\n        \r\n        >\r\n          <Tab label=\"HTML/CSS\" icon={<FaHtml5 size={20} color=\"#E44D26\"/>} {...a11yProps(0)} />\r\n          <Tab label=\"Bootstrap\" icon={<DiBootstrap size={20}  color=\"#563D7C\"/>} {...a11yProps(1)} />\r\n          <Tab label=\"Laravel\" icon={<FaLaravel size={20}  color=\"#FB503B\"/>} {...a11yProps(2)} />\r\n          <Tab label=\"NodeJs\" icon={<FaNodeJs size={20}  color=\"#91C451\"/>} {...a11yProps(3)} />\r\n\r\n        </Tabs>\r\n        </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <TabPanel value={value} index={0}>\r\n        <Container className={classes.cardGrid} maxWidth=\"xl\">\r\n          <Grid container spacing={2}>\r\n              {cards.map(card => (\r\n              <Grid item key={card} xs={12} sm={6} md={4}>\r\n                  <CardComponent\r\n                      Heading=\"Inventory Management system\"\r\n                      Title=\"This is mini taylors management system \"\r\n                  />\r\n              </Grid>\r\n              ))}\r\n          </Grid>\r\n        </Container>\r\n      </TabPanel>\r\n      \r\n      <TabPanel value={value} index={1}>\r\n        Item Two\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        Item Three\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        Item Four\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport Menu from '../components/Menu';\r\nconst Contact = () => {\r\n    return (\r\n        <div>\r\n            <Menu />\r\n            <h1>contact</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact\r\n","import React from 'react';\nimport {Switch, Route} from 'react-router-dom'\n\n/* pages */\nimport Home from './pages/Home';\nimport Resume from './pages/Resume';\nimport About from './pages/About';\nimport Project from './pages/Project';\nimport Contact from './pages/Contact';\n\n\nconst App = () => {\n\n  return (\n    <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/resume\" component={Resume} />\n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/project\" component={Project} />\n        <Route exact path=\"/contact\" component={Contact} />\n    </Switch>\n\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}